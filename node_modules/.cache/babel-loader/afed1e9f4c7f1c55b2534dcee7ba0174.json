{"ast":null,"code":"import _classCallCheck from \"/Users/edvinmodigh/PycharmProjects/tentahelper/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/edvinmodigh/PycharmProjects/tentahelper/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/edvinmodigh/PycharmProjects/tentahelper/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/edvinmodigh/PycharmProjects/tentahelper/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/edvinmodigh/PycharmProjects/tentahelper/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/edvinmodigh/PycharmProjects/tentahelper/src/components/auth/requireAuth.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nexport default function (ComposedComponent) {\n  var Authentication =\n  /*#__PURE__*/\n  function (_Component) {\n    _inherits(Authentication, _Component);\n\n    function Authentication() {\n      _classCallCheck(this, Authentication);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(Authentication).apply(this, arguments));\n    }\n\n    _createClass(Authentication, [{\n      key: \"componentWillMount\",\n      value: function componentWillMount() {\n        if (this.props.authenticated === null) {\n          this.context.router.history.push(\"/\");\n        }\n      }\n    }, {\n      key: \"componentWillUpdate\",\n      value: function componentWillUpdate(nextProps) {\n        if (!nextProps.authenticated) {\n          this.context.router.history.push(\"/\");\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        if (this.props.authenticated) {\n          return React.createElement(ComposedComponent, Object.assign({}, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }));\n        }\n\n        return null;\n      }\n    }]);\n\n    return Authentication;\n  }(Component);\n\n  Authentication.contextTypes = {\n    router: PropTypes.object\n  };\n\n  function mapStateToProps(state) {\n    return {\n      authenticated: state.auth\n    };\n  }\n\n  return connect(mapStateToProps)(Authentication);\n}","map":{"version":3,"sources":["/Users/edvinmodigh/PycharmProjects/tentahelper/src/components/auth/requireAuth.js"],"names":["React","Component","connect","PropTypes","ComposedComponent","Authentication","props","authenticated","context","router","history","push","nextProps","contextTypes","object","mapStateToProps","state","auth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,UAASC,iBAAT,EAA4B;AAAA,MACnCC,cADmC;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAMlB;AACnB,YAAI,KAAKC,KAAL,CAAWC,aAAX,KAA6B,IAAjC,EAAuC;AACrC,eAAKC,OAAL,CAAaC,MAAb,CAAoBC,OAApB,CAA4BC,IAA5B,CAAiC,GAAjC;AACD;AACF;AAVsC;AAAA;AAAA,0CAYnBC,SAZmB,EAYR;AAC7B,YAAI,CAACA,SAAS,CAACL,aAAf,EAA8B;AAC5B,eAAKC,OAAL,CAAaC,MAAb,CAAoBC,OAApB,CAA4BC,IAA5B,CAAiC,GAAjC;AACD;AACF;AAhBsC;AAAA;AAAA,+BAkB9B;AACP,YAAI,KAAKL,KAAL,CAAWC,aAAf,EAA8B;AAC5B,iBAAO,oBAAC,iBAAD,oBAAuB,KAAKD,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AACD,eAAO,IAAP;AACD;AAvBsC;;AAAA;AAAA,IACZL,SADY;;AACnCI,EAAAA,cADmC,CAEhCQ,YAFgC,GAEjB;AACpBJ,IAAAA,MAAM,EAAEN,SAAS,CAACW;AADE,GAFiB;;AA0BzC,WAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,WAAO;AAAET,MAAAA,aAAa,EAAES,KAAK,CAACC;AAAvB,KAAP;AACD;;AAED,SAAOf,OAAO,CAACa,eAAD,CAAP,CAAyBV,cAAzB,CAAP;AACD","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nexport default function(ComposedComponent) {\n  class Authentication extends Component {\n    static contextTypes = {\n      router: PropTypes.object\n    };\n\n    componentWillMount() {\n      if (this.props.authenticated === null) {\n        this.context.router.history.push(\"/\");\n      }\n    }\n\n    componentWillUpdate(nextProps) {\n      if (!nextProps.authenticated) {\n        this.context.router.history.push(\"/\");\n      }\n    }\n\n    render() {\n      if (this.props.authenticated) {\n        return <ComposedComponent {...this.props} />;\n      }\n      return null;\n    }\n  }\n\n  function mapStateToProps(state) {\n    return { authenticated: state.auth };\n  }\n\n  return connect(mapStateToProps)(Authentication);\n}\n"]},"metadata":{},"sourceType":"module"}